import {Card, Form, Input, message, Spin} from "antd";
import {collection, doc, getDoc, getDocs, setDoc} from "firebase/firestore";
import Head from "next/head";
import Image from "next/image";
import {firestore} from "../firebase/firebaseConfig";
import {useRouter} from "next/router";
import {useEffect, useState} from "react";

const Home = () => {
  const [displayLoader, setDisplayLoader] = useState(false);

  const [loginForm] = Form.useForm();
  const router = useRouter();

  useEffect(() => {
    const user = JSON.parse(localStorage.getItem("user"));
    if (user) {
      router.push("/quiz");
    }
  }, []);

  const onFinish = async (values) => {
    setDisplayLoader(true);
    const docRef = doc(firestore, "users_db", values.its);
    const docSnap = await getDoc(docRef);

    // const quizSettings = {}
    // const querySnapshot = await getDocs(collection(firestore, "quiz_settings"));
    // querySnapshot.forEach((doc) => {
    //   quizSettings = {
    //     id: doc.id,
    //     ...doc.data()
    //   }
    // });

    // console.log("quiz_settings",quizSettings)

    if (docSnap.exists()) {
      const data = docSnap.data();
      localStorage.setItem("user", JSON.stringify(data));
      await addUserToQuizUsers(data);
    } else {
      message.error("User not found! Please check the its number entered");
      setDisplayLoader(false);
    }
  };

  const onFinishFailed = (errorInfo) => {
    console.log("Failed:", errorInfo);
  };

  const addUserToQuizUsers = async (data) => {
    const docRef = doc(firestore, "quiz_user", String(data.ITS_ID));
    const docSnap = await getDoc(docRef);
    if (!docSnap.exists()) {
      await setDoc(doc(firestore, "quiz_user", String(data.ITS_ID)), {
        ...data,
        is_quiz_submitted: false,
        score: 0,
      });
      setDisplayLoader(false);
      router.push("/quiz");
    } else {
      router.push("/quiz");
      setDisplayLoader(false);
    }
    setDisplayLoader(false);
  };

  return (
    <div className="min-h-screen overflow-y-auto ">
      <Head>
        <title>Tahfeez Quiz</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {displayLoader ? (
        <div className="fixed z-50 top-0 left-0 w-screen h-screen bg-white/70 flex items-center justify-center">
          <Spin size="large" />
        </div>
      ) : null}

      <main className="w-full p-4 min-h-screen overflow-y-auto bg-gray-300 flex items-center justify-center">
        <Card className="w-full rounded-lg md:max-w-md">
          <div className="w-full flex justify-center mb-4">
            <Image src="/logo.png" alt="logo" width={125} height={125} />
          </div>

          <Form
            name="login"
            onFinish={onFinish}
            onFinishFailed={onFinishFailed}
            autoComplete="off"
            layout="vertical"
            form={loginForm}
          >
            <Form.Item
              label="ITS"
              name="its"
              rules={[
                {
                  required: true,
                  message: "Please input your its!",
                },
              ]}
            >
              <Input />
            </Form.Item>

            <Form.Item>
              <button
                className="bg-blue-500 hover:bg-blue-600 active:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300 text-white p-2 rounded"
                type="submit"
              >
                Login
              </button>
            </Form.Item>
          </Form>
        </Card>
      </main>
    </div>
  );
};

export default Home;
